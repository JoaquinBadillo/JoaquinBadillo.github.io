---
import { getCollection } from 'astro:content';

// Layout import — provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from '../layouts/BaseLayout.astro';

// Component Imports
import Grid from '../components/Container.astro';
import Hero from '../components/Hero.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';

import Skills from '../components/Skills.astro';

// Content Fetching: List four most recent work projects
const projects = (await getCollection('work'))
	.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf());
---

<BaseLayout>
	<div class="stack gap-20 lg:gap-48">
		<div class="wrapper stack gap-8 lg:gap-20">
			<header class="hero">
				<Hero
					title="Joaquín Badillo"
					tagline="CS Student"
					align="start"
				/>

				<img
					alt="A portrait of me"
					width="620"
					height="620"
					src="/assets/portrait.png"
				/>
			</header>

			<Skills />
		</div>

		<main class="stack">
			<section id="work" class="with-background with-cta">
				<header class="section-header">
					<h3>Projects</h3>
          <p>Click on the titles to read more about each one</p>
				</header>

				<Grid variant="offset">
					{
						projects.map((project) => (
							<li>
								<PortfolioPreview project={project} />
							</li>
						))
					}
				</Grid>
			</section>
		</main>
	</div>
</BaseLayout>

<style>
	.hero {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 2rem;
	}

	.roles {
		display: none;
	}

	.hero img {
		aspect-ratio: 1 / 1;
		object-fit: cover;
		object-position: top;
		border-radius: 100%;
		box-shadow: var(--shadow-md);
		background-image: url('/assets/backgrounds/noise.png');
		background-repeat: repeat;
		background-size: 100%;
		background-position: center;
	}

	@media (min-width: 50em) {
		.hero {
			display: grid;
			grid-template-columns: 6fr 4fr;
			padding-inline: 2.5rem;
			gap: 3.75rem;
		}

		.roles {
			margin-top: 0.5rem;
			display: flex;
			gap: 0.5rem;
		}

		.hero img {
			aspect-ratio: 1 / 1;
			border-radius: 100%;
			object-fit: cover;
		}
	}

	/* ====================================================== */

	.section {
		display: grid;
		gap: 2rem;
	}

	#work {
		margin: 0 auto;
		max-width: 90%;
		display: flex;
		flex-direction: column;
		align-items: center;
	}

	.with-background {
		position: relative;
	}

	.with-background::before {
		--hero-bg: var(--bg-image-subtle-2);

		content: '';
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100vw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background: url('/assets/backgrounds/noise.png') top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat, var(--gray-999);
		background-blend-mode: overlay, normal, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}

	.section-header p {
		text-align: center;
		color: var(--gray-500);
	}

	.section-header h3 {
		font-size: var(--text-2xl);
	}

	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: 'header header header header' 'gallery gallery gallery gallery';
			gap: 5rem;
		}

		.section.with-cta {
			grid-template-areas: 'header header header cta' 'gallery gallery gallery gallery';
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h3 {
			font-size: var(--text-4xl);
			text-align: center;
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.cta {
			grid-area: cta;
		}
	}
</style>
